# P4_e11_
###############        
## APARTAT A ##
###############
per aplicar totes les funcionalitat necesitem les següents variables afegides:
int registre[][];
USER_MAX = 10;
COLUM_MAX = 7;
boolean categoriaOrdre;
POS_CAT = 5;
POS_SEX = 4;
int contInf = 0;
int contJun = 0;
int contSen = 0;





###############
## APARTAT B ##
###############

- L'exercici diu que hem de modificar el codi perque la array sigui bidimensional, ales hores necesitem un array amb un máxim de
10 files, es a dir un máxim de 10 usuaris registrats amb un máxim de 7 columnes, cada columna conté cada tipus de dada, tots son
tipus int però per nosaltres representen tipus de dades diferents, ID, dates de naixement, sexe ...
Primer cal indicar el tamny i la creació de la array bidimensional: int registre [][] = new int [USER_MAX][COLUM_MAX]

Podriem dir que les posicions s'indiquin de la següent forma:
          --> i = indicará posició de la fila
          --> x = indicará la posició de la columna
          registre[i][x]

- Una vegada indicat el tamany hem de modificar el codi en la forma de guardar les dades, es a dir, l'usuari ha d'introduïr unes
dades ja que el nostre programa pregunta i espera una resposta, en el moment d'introduir aquestes dades s'han de guardar de forma
ordenada, podriem dir que cada pregunta es una columna, en les array les posicions comencen en 0 que sería en realitat la primera
posició. La idea podría ser la següent:
 --> Primera pregunta --> la resposta es correcta? --> si --> guardem les dades en les posicions correctes: registre[i][x]                                        
                                                          --> no --> tornem a preguntar, no fem cas si ha superat el límit
                                                          
--> segona pregunta (el mateix concepte)
          {La idea es, si la pregunta es correcta augmenta x++ i fer la següent pregunta, si arriba al final i vol registrar
          altre usuari augmenta la i++, vol dir que tornem al bucle de les preguntes de el inici i augmentem una fila més}
          

###############
## APARTAT C ##
###############

En aquest apartat hem de preguntar a l'usuari si vol veure les dades ordenades per categoria, primer ha de mostrar les dades, una
vegada mostrat les dades ha de preguntar si es volen veure les dades per categoria. Ho podem fer de la següent forma:
-mostrar el resum de les dades
-Vols veure les dades ordenades per categoria?
--> si (boolean categoriaOrdre = true;)
--> no (boolean categoriaOrdre = false;)
- Una vegada feta la resposta --> if (categoriaOrdre) {
          Tot el codi per ordenar les dades
          Una vegada ordenades mostrar les dades ordenades
}
-Per ordenar les dades utilitzarem el metóde que ens han ensenyat al IOC,he vist per internet que hi ha altre metóde, però
utilitzarem el metòde congut com "bubble sort", ho farem de la següent forma:
          1 - crear un bucle for per fer de contador de files ( int i = 0; i < registre.lenght; i++)
          2 - crear un bucle for per fer contador de les columnes (int x = 0; x < COLUM_MAX; x++)
          3 - crear un bucle for per fer contador de fila, la següent fila per compararla amb la anterior, concepte bubble sort
                    (int j = i + 1; j < registre.lenght; j++)
          4 - una vegada creat els bucles cal ordenar les dades per categoria, ho farem de la següent forma:
                    si (registre[i][POS_CAT] > registre[j][POS_CAT]) {
                    /** comparem el valor de la posició categoria de la primera fila amb el de la segona fila
                    si el de la primera fila es més gran que el de la segona fila comença l'ordenació de totes les dades:
                    */
                    -Per ordenar les dades utilitzem el metòde aprés en IOC, necesitem utilitzar les variables auxiliars.
                    Totes les dades han de ser ordenades, però qui determina l'ordre es categoria gracies a la condició creada 
                    en aquest pas.
                    El concepte d'ordenació es el següent:
                    auxCat = registre[i][POS_CAT];
                    registre[i][POS_CAT] = registre[j][POS_CAT];
                    registre[j][POS_CAT] = auxCat;
                    //Amb aquest concepte s'ordenen les dades, s'ha d'aplicar en totes les parts
                    
                    }
-Per mostrar les dades ordenades i respectant els estrings ho fem de la manera següent:
1-Dins del if anterior en el cual s'indica que es vol veure les dades ordenades per categoría:
2- Crear bucle per fer contador de les files: for (i = 0; i < registre.lenght; i++)
3- crear bucle per fer contador de les columnes, en aquest cas s'ha de posar com a límit la posició de sexe:
          for (x = 0; x < POS_SEX; x++) 
          - Mostrem les dades fins a aquest punt, no volem que es mostri el número del sexe
          per aquest motiu posem com a limit POS_SEX : System.out.print(registre[i][x] +"\t");
          -Dins aquest bucle volem mostrar les dades String del sexe, ho fem amb switch per analitzar el valor d'aquesta posició
          i depen del valor mostrara un string o mostrará altre, es el punt final del bucle x, el que controla les posicions:
          switch (registre[i][POS_SEX])
                    case NOI:
                              sexString = "noi"; //aquest es el string que mostrarem per aquesta posició
                              System.out.print(sexString +"\t");
                              break;
                    case NOIA:
                              utilitzem el mateix concepte.
4- Crear un altre for per a les posicions que falten, utilitzarem el mateix concepte per mostrar el string de la categoría,
anem jugant amb el limit del contador i abans d'arribar a la posició de categoria finalitza el bucle per mostrem les dades amb 
switch:
          switch (registre[][POS_CAT])
                    case JUN:
                              catString = "Junior";
                              System.out.print(catString +"\t");
                              break;
                              
                (Utilitzem la mateixa estructura a la resta de categorias)
5- Encara falten mes posicions de columnes a mostrar, tots aquests bucles estan dins del bucle "for i" ja que contenen
totes les dades. Tornariem a crear un altre bucle for per a les posicions de les columnes que ens queden i mostrar les seves
dades: (En aquest cas en concret només queda una posició, ales hores no té sentit crear un bucle, podem mostrar directament
l'ultima posició, qué quedaría així:)
          System.out.print(registre[i][POS_PUNT]); //la i sempre variaria ja que indica la fila pero la columna en aquest cas
          sempré será la mateixa en aquest punt, recordem que aquesta sentencía está dins del for "i".
          
6-L'ercici demana que el programa fagi un recontament dels usuaris que hi ha per categoria, ho podem fer de la següent forma:
En la sexta pregunta fa referencia per la categoria, dins d'aquesta pregunta podem crear unes condicions en les quals augmentin
els diferents contadors, es a dir qué tindriem 3 variables diferents, per exemple "contInf, contJun, contSen"
          Si la resposta es del tipus correcte i compleix amb totes les condicions perque sigui una resposta acceptada
          diem per exemple que: contInf++;
                    contJun++;
 D'aquesta forma tenim un recompte, ales hores ara només queda mostrar el recompte dins del if on indica que si es vol veure
 l'informació ordenada per categories
 System.out.println("Hi ha un total de " +contInf +"registrats en la categoria infantil.")
